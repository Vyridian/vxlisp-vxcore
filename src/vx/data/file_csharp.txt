  public static Vx.Core.Type_boolean vx_boolean_exists_from_file(
    Vx.Data.File.Type_file file) {
    Vx.Core.Type_boolean output = Vx.Core.e_boolean;
    Vx.Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    sfullpath = vx_path_normalize_from_path(sfullpath);
    if (System.IO.File.Exists(sfullpath)) {
      output = Core.c_true;
    }
    return output;
  }

  public static Vx.Core.Type_boolean vx_boolean_write_from_file_string(
    Vx.Core.Type_context context,
    Vx.Data.File.Type_file file,
    Vx.Core.Type_string text) {
    Vx.Core.Type_boolean output = Vx.Core.c_false;
    Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    sfullpath = vx_path_normalize_from_path(sfullpath);
    string stext = text.vx_string();
    try {
      System.IO.File.WriteAllText(sfullpath, stext);
      output = Vx.Core.c_true;
    } catch (Exception ex) {
      Vx.Core.Type_msg msg = Vx.Core.vx_msg_from_exception("boolean-write<-file", ex);
      output = Vx.Core.vx_copy(Vx.Core.c_false, msg);
    }
    return output;
  }

  public static string vx_path_normalize_from_path(string spath) {
    string output = spath;
    if (spath.IndexOf(":") < 0) {
      string pathcurrent = vx_spathcurrent_from_os();
      output = pathcurrent + "/" + output;
    }
    return output;
  }

  public static Vx.Core.Type_string vx_pathcurrent_from_os() {
    string stext = vx_spathcurrent_from_os();
    Vx.Core.Type_string output = Vx.Core.vx_new_string(stext);
    return output;
  }

  public static string vx_spathcurrent_from_os() {
    string output = System.Environment.CurrentDirectory;
    int ipos = output.IndexOf("\\test\\AppTest");
    if (ipos >= 0) {
      output = Vx.Core.vx_string_from_string_start_end(output, 1, ipos);
    }
    return output;
  }

  public static Vx.Core.Type_string vx_string_read_from_file(
    Vx.Data.File.Type_file file) {
    Vx.Core.Type_string output = Vx.Core.e_string;
    Vx.Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    sfullpath = vx_path_normalize_from_path(sfullpath);
    if (System.IO.File.Exists(sfullpath)) {
      try {
        string scontent = System.IO.File.ReadAllText(sfullpath);
        output = Vx.Core.vx_new_string(scontent);
      } catch (Exception ex) {
        Vx.Core.Type_msg msg = Vx.Core.vx_msg_from_exception("string-read<-file", ex);
        output = Vx.Core.vx_copy(output, msg);
      }
    } else {
      Vx.Core.Type_msg msg = Vx.Core.vx_msg_from_error("string-read<-file", ":filenotfound", file);
      output = Vx.Core.vx_copy(output, msg);
    }
    return output;
  }

  public static Vx.Core.Type_string vx_string_read_from_file(
    Vx.Core.Type_context context,
    Vx.Data.File.Type_file file) {
    return vx_string_read_from_file(file);
  }
