  // vx_int_from_string_find(string, string)
  public static int vx_int_from_string_find(String text, String find) {
    return text.indexOf(find) + 1;
  }

  // vx_int_from_string_find(string, string)
  public static Core.Type_int vx_int_from_string_find(Core.Type_string text, Core.Type_string find) {
    int ipos = vx_int_from_string_find(text.vx_string(), find.vx_string());
    Core.Type_int output = Core.vx_new_int(ipos);
    return output;
  }

  // vx_int_from_string_findkeyword(string, string)
  public static int vx_int_from_string_findkeyword(String text, String find) {
    int output = -1;
    if (text == "") {
    } else if (find == ":nonwhitespace") {
      String wschars1 = " \n\r\t";
      int ilen = text.length();
      for (int i = 0; i < ilen; i++) {
        char cchar = text.charAt(i);
        int pos = wschars1.indexOf(cchar);
        if (pos < 0) {
          output = i;
          break;
        }
      }
    } else if (find == ":whitespace") {
      char[] wschars2 = {' ', '\n', '\r', '\t'};
      for (char cchar : wschars2) {
        int pos = text.indexOf(cchar);
        if (pos < 0) {
        } else if (output < 0) {
          output = pos;
        } else if (pos < output) {
          output = pos;
        }
      }
    } else {
      output = text.indexOf(find);
    }
    output += 1;
    return output;
  }

  // vx_int_from_string_findkeyword(string, string)
  public static Core.Type_int vx_int_from_string_findkeyword(Core.Type_string text, Core.Type_string find) {
    int ipos = vx_int_from_string_findkeyword(text.vx_string(), find.vx_string());
    Core.Type_int output = Core.vx_new_int(ipos);
    return output;
  }
 
  // vx_int_from_string_findlast(string, string)
  public static int vx_int_from_string_findlast(String text, String findlast) {
    return text.lastIndexOf(findlast) + 1;
  }

  // vx_int_from_string_findlast(string, string)
  public static Core.Type_int vx_int_from_string_findlast(Core.Type_string text, Core.Type_string findlast) {
    int ipos = vx_int_from_string_findlast(text.vx_string(), findlast.vx_string());
    Core.Type_int output = Core.vx_new_int(ipos);
    return output;
  }

  // vx_string_from_stringlist_join(stringlist, string)
  public static Core.Type_string vx_string_from_stringlist_join(Core.Type_stringlist vals, Core.Type_string delim) {
    List<String> listvalstring = Core.arraylist_from_arraylist_fn(vals.vx_list(), (item) -> {
      Core.Type_string valstring = Core.f_any_from_any(Core.t_string, item);
      return valstring.vx_string();
    });
    String stext = String.join(delim.vx_string(), listvalstring);  
    Core.Type_string output = Core.vx_new_string(stext);
    return output;
  }

  // vx_string_lowercase(string)
  public static Core.Type_string vx_string_lowercase(Core.Type_string text) {
    Core.Type_string output = Core.e_string;
    String stext = text.vx_string();
    stext = stext.toLowerCase();
    output = Core.vx_new_string(stext);
    return output;
  }

  // vx_string_trim(string)
  public static Core.Type_string vx_string_trim(Core.Type_string text) {
    Core.Type_string output = Core.e_string;
    String stext = text.vx_string();
    stext = stext.trim();
    output = Core.vx_new_string(stext);
    return output;
  }

  // vx_string_uppercase(string)
  public static Core.Type_string vx_string_uppercase(Core.Type_string text) {
    Core.Type_string output = Core.e_string;
    String stext = text.vx_string();
    stext = stext.toUpperCase();
    output = Core.vx_new_string(stext);
    return output;
  }

  public static Core.Type_stringlist vx_stringlist_from_string_split(Core.Type_string text, Core.Type_string delim) {
    Core.Type_stringlist output = Core.e_stringlist;
    String stext = text.vx_string();
    String sdelim = delim.vx_string();
    Object[] arraystring = stext.split(java.util.regex.Pattern.quote(sdelim));
    output = Core.vx_new(Core.t_stringlist, arraystring);
    return output;
  }
